// Generated by view binder compiler. Do not edit!
package my.lovely.marketanalog.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import my.lovely.marketanalog.R;

public final class FragmentCardPaymentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btCardOrder;

  @NonNull
  public final TextInputEditText edCardCVV;

  @NonNull
  public final TextInputEditText edCardNumber;

  @NonNull
  public final TextInputEditText edCardYear;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final LinearLayout linearCardArea;

  @NonNull
  public final TextView tvCardText;

  private FragmentCardPaymentBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btCardOrder, @NonNull TextInputEditText edCardCVV,
      @NonNull TextInputEditText edCardNumber, @NonNull TextInputEditText edCardYear,
      @NonNull ImageView imageView3, @NonNull LinearLayout linearCardArea,
      @NonNull TextView tvCardText) {
    this.rootView = rootView;
    this.btCardOrder = btCardOrder;
    this.edCardCVV = edCardCVV;
    this.edCardNumber = edCardNumber;
    this.edCardYear = edCardYear;
    this.imageView3 = imageView3;
    this.linearCardArea = linearCardArea;
    this.tvCardText = tvCardText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCardPaymentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCardPaymentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_card_payment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCardPaymentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btCardOrder;
      Button btCardOrder = ViewBindings.findChildViewById(rootView, id);
      if (btCardOrder == null) {
        break missingId;
      }

      id = R.id.edCardCVV;
      TextInputEditText edCardCVV = ViewBindings.findChildViewById(rootView, id);
      if (edCardCVV == null) {
        break missingId;
      }

      id = R.id.edCardNumber;
      TextInputEditText edCardNumber = ViewBindings.findChildViewById(rootView, id);
      if (edCardNumber == null) {
        break missingId;
      }

      id = R.id.edCardYear;
      TextInputEditText edCardYear = ViewBindings.findChildViewById(rootView, id);
      if (edCardYear == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.linearCardArea;
      LinearLayout linearCardArea = ViewBindings.findChildViewById(rootView, id);
      if (linearCardArea == null) {
        break missingId;
      }

      id = R.id.tvCardText;
      TextView tvCardText = ViewBindings.findChildViewById(rootView, id);
      if (tvCardText == null) {
        break missingId;
      }

      return new FragmentCardPaymentBinding((ConstraintLayout) rootView, btCardOrder, edCardCVV,
          edCardNumber, edCardYear, imageView3, linearCardArea, tvCardText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
