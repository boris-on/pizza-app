// Generated by Dagger (https://dagger.dev).
package my.lovely.marketanalog.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import my.lovely.domain.usecase.SortByTagUseCase;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DomainModule_ProvideSortByTagUseCaseFactory implements Factory<SortByTagUseCase> {
  private final DomainModule module;

  public DomainModule_ProvideSortByTagUseCaseFactory(DomainModule module) {
    this.module = module;
  }

  @Override
  public SortByTagUseCase get() {
    return provideSortByTagUseCase(module);
  }

  public static DomainModule_ProvideSortByTagUseCaseFactory create(DomainModule module) {
    return new DomainModule_ProvideSortByTagUseCaseFactory(module);
  }

  public static SortByTagUseCase provideSortByTagUseCase(DomainModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideSortByTagUseCase());
  }
}
