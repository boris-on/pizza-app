// Generated by Dagger (https://dagger.dev).
package my.lovely.marketanalog.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import my.lovely.domain.database.BasketDao;
import my.lovely.domain.repository.BasketRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DataModule_ProvideBasketRepositoryImplFactory implements Factory<BasketRepository> {
  private final DataModule module;

  private final Provider<BasketDao> basketDaoProvider;

  public DataModule_ProvideBasketRepositoryImplFactory(DataModule module,
      Provider<BasketDao> basketDaoProvider) {
    this.module = module;
    this.basketDaoProvider = basketDaoProvider;
  }

  @Override
  public BasketRepository get() {
    return provideBasketRepositoryImpl(module, basketDaoProvider.get());
  }

  public static DataModule_ProvideBasketRepositoryImplFactory create(DataModule module,
      Provider<BasketDao> basketDaoProvider) {
    return new DataModule_ProvideBasketRepositoryImplFactory(module, basketDaoProvider);
  }

  public static BasketRepository provideBasketRepositoryImpl(DataModule instance,
      BasketDao basketDao) {
    return Preconditions.checkNotNullFromProvides(instance.provideBasketRepositoryImpl(basketDao));
  }
}
