// Generated by Dagger (https://dagger.dev).
package my.lovely.marketanalog.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import my.lovely.domain.repository.BasketRepository;
import my.lovely.domain.usecase.GetBasketDaoDbUseCase;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DomainModule_ProvideGetBasketDaoDBUseCaseFactory implements Factory<GetBasketDaoDbUseCase> {
  private final DomainModule module;

  private final Provider<BasketRepository> basketReposotiryProvider;

  public DomainModule_ProvideGetBasketDaoDBUseCaseFactory(DomainModule module,
      Provider<BasketRepository> basketReposotiryProvider) {
    this.module = module;
    this.basketReposotiryProvider = basketReposotiryProvider;
  }

  @Override
  public GetBasketDaoDbUseCase get() {
    return provideGetBasketDaoDBUseCase(module, basketReposotiryProvider.get());
  }

  public static DomainModule_ProvideGetBasketDaoDBUseCaseFactory create(DomainModule module,
      Provider<BasketRepository> basketReposotiryProvider) {
    return new DomainModule_ProvideGetBasketDaoDBUseCaseFactory(module, basketReposotiryProvider);
  }

  public static GetBasketDaoDbUseCase provideGetBasketDaoDBUseCase(DomainModule instance,
      BasketRepository basketReposotiry) {
    return Preconditions.checkNotNullFromProvides(instance.provideGetBasketDaoDBUseCase(basketReposotiry));
  }
}
